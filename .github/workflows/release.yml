name: Publish Stable Release

on:
  push:
    # tags:
    #   - '[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

jobs:

  create-release:
    name: Prepare Velopack Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}

  build-release:
    name: Build for ${{ matrix.rid }}
    needs: create-release # Depends on the release placeholder being created.
    runs-on: ${{ matrix.runner_os }}
    strategy:
      matrix:
        include:
          - { runner_os: ubuntu-latest, rid: linux-x64 }
          - { runner_os: windows-latest, rid: win-x64 }
          - { runner_os: macos-latest, rid: osx-x64 }
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with: { fetch-depth: 0 }

    - name: Free up disk space on Windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Write-Host "Initial free space:"
        Get-PSDrive C | Select-Object Free
        Write-Host "Removing large toolsets..."
        Remove-Item -Path "C:\hostedtoolcache\windows\Android\*" -Recurse -Force
        Remove-Item -Path "C:\Program Files\Microsoft\Exchange Server\*" -Recurse -Force
        Remove-Item -Path "C:\ghcup\*" -Recurse -Force
        Write-Host "Free space after cleanup:"
        Get-PSDrive C | Select-Object Free

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          10.0.x
          9.0.301
        dotnet-quality: 'preview'

    - name: Get version
      id: minver
      run: |
        VERSION=$(dnx -v q -y minver-cli -- --default-pre-release-identifiers preview --verbosity error)
        echo "Discovered version: $VERSION"
        echo "package_version=$VERSION" >> $GITHUB_OUTPUT
      env:
        DOTNET_NOLOGO: true

    - name: Build Release for ${{ matrix.rid }}
      run: dotnet run .build/targets.cs release --rid ${{ matrix.rid }} --version ${{ steps.minver.outputs.package_version }}

    - name: Upload Velopack artifacts
      uses: actions/upload-artifact@v4
      with:
        name: typical-${{ matrix.rid }}
        path: dist/release/${{ matrix.rid}}
  publish-release:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    needs: build-release
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with: { global-json-file: global.json }

    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: typical
        pattern: typical-*
        merge-multiple: true
    - name: Get version
      id: minver
      run: |
        VERSION=$(dnx -v q -y minver-cli -- --default-pre-release-identifiers preview --verbosity error)
        echo "Discovered version: $VERSION"
        echo "package_version=$VERSION" >> $GITHUB_OUTPUT
      env:
        DOTNET_NOLOGO: true

    - name: Aggregate and Upload Release
      run: ./build.cs upload-release --version ${{ steps.get_version.outputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}